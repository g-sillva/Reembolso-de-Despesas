[{"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\index.js":"1","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\App.js":"2","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\formulario_cadastro\\FormCadastro.js":"3","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_cadastro_lancamento\\CardEditarLancamento.js":"4","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_lancamento\\CardLancamento.js":"5","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\pages\\tela_inicial\\TelaInicial.js":"6","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\data\\data.js":"7","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\Context.js":"8","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\pages\\tela_login_cadastro\\LoginCadastro.js":"9","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\pages\\tela_adm\\TelaAdm.js":"10","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_tela_inicial\\CardTelaInicial.js":"11","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_filtro\\CardFiltro.js":"12","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\header\\Header.js":"13","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\formulario_login\\FormLogin.js":"14","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\cartao_confirmacao_cadastro\\CardConfirmacaoCadastro.js":"15","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\notificacao\\Notificacao.js":"16","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\notificacao\\item_notificacao\\ItemNotificacao.js":"17"},{"size":338,"mtime":1678131322343,"results":"18","hashOfConfig":"19"},{"size":869,"mtime":1678131335780,"results":"20","hashOfConfig":"19"},{"size":7951,"mtime":1678131335794,"results":"21","hashOfConfig":"19"},{"size":5167,"mtime":1678131335784,"results":"22","hashOfConfig":"19"},{"size":3567,"mtime":1678131335788,"results":"23","hashOfConfig":"19"},{"size":8386,"mtime":1678131335820,"results":"24","hashOfConfig":"19"},{"size":1137118,"mtime":1678131335816,"results":"25","hashOfConfig":"19"},{"size":105,"mtime":1678131335781,"results":"26","hashOfConfig":"19"},{"size":1329,"mtime":1678131335821,"results":"27","hashOfConfig":"19"},{"size":5473,"mtime":1678131335817,"results":"28","hashOfConfig":"19"},{"size":369,"mtime":1678131335791,"results":"29","hashOfConfig":"19"},{"size":4623,"mtime":1678131335787,"results":"30","hashOfConfig":"19"},{"size":1034,"mtime":1678131335797,"results":"31","hashOfConfig":"19"},{"size":2290,"mtime":1678133045586,"results":"32","hashOfConfig":"19"},{"size":879,"mtime":1678131335793,"results":"33","hashOfConfig":"19"},{"size":1435,"mtime":1678131335800,"results":"34","hashOfConfig":"19"},{"size":843,"mtime":1678131335802,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"164cmb2",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"39"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"39"},"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\index.js",[],[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\App.js",[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\formulario_cadastro\\FormCadastro.js",[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_cadastro_lancamento\\CardEditarLancamento.js",["96","97","98"],[],"import React, { useEffect, useState } from 'react';\r\n\r\nimport \"./CardEditarLancamento.css\";\r\n\r\nfunction CardEditarLancamento({ tituloCard = \"\", \r\n                                tituloLanc = \"\", \r\n                                valorCard = \"\", \r\n                                categoriaCard = 'Categoria', \r\n                                descricaoCard = \"\", \r\n                                comprovativoCard = \"\", \r\n                                onCloseClick}) {\r\n  const [titulo, setTitulo] = useState(tituloLanc);\r\n  const [valor, setValor] = useState(valorCard);\r\n  const [categoria, setCategoria] = useState(categoriaCard);\r\n  const [descricao, setDescricao] = useState(descricaoCard);\r\n  const [comprovativo, setComprovativo] = useState(comprovativoCard);\r\n  \r\n  const [imagemSelecionada, setImagemSelecionada] = useState();\r\n  const [imagemPreview, setImagemPreview] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!imagemSelecionada) {\r\n      setImagemPreview(undefined);\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(imagemSelecionada);\r\n\r\n    setImagemPreview(objectUrl)\r\n    return () => URL.revokeObjectURL(objectUrl)\r\n }, [imagemSelecionada])\r\n\r\n  return (\r\n    <div className='card-editar-lancamento-container'>\r\n    <div className='card-editar-lancamento-dark-bg'></div>\r\n    <div className='card-editar-lancamento-content'>\r\n      <i className=\"fa-solid fa-xmark\" onClick={onCloseClick}></i>\r\n      <div className='card-editar-lancamento-header'>\r\n        <h2>{tituloCard}</h2>\r\n        <p>Por favor, preencha as informações abaixo</p>\r\n      </div>\r\n      <form onSubmit={(event) => event.preventDefault()}>\r\n\r\n        <div className='card-editar-lancamento-input'>\r\n          <input type=\"text\" name='titulo' placeholder='Título *' maxLength=\"50\" value={titulo} required onChange={(e) => setTitulo(e.target.value)}/>\r\n          <p>{titulo.length}/50</p>\r\n        </div>\r\n\r\n        <div className='card-editar-lancamento-input-flex'>\r\n          <input type=\"number\" name='valor' placeholder='Valor *' value={valor} required onChange={(e) => setValor(e.target.value)}/>\r\n          <select id='categoria' name='categoria' value={categoria} required onChange={(e) => setCategoria(e.target.value)}>\r\n            <option value=\"categoria\" disabled>Categoria</option>\r\n            <option value=\"ALIEMENTACAO\">Alimentação</option>\r\n            <option value=\"TRANSPORTE_GASOLINA\">Transporte/Gasolina</option>\r\n            <option value=\"HOSPEDAGEM\">Hospedagem</option>\r\n            <option value=\"SOFTWARE\">Software</option>\r\n            <option value=\"TREINAMENTO\">Treinamento</option>\r\n            <option value=\"OUTRO\">Outro</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className='card-editar-lancamento-textarea'>\r\n          <textarea rows=\"10\" placeholder='Descrição' maxLength=\"500\" value={descricao} name='descricao' onChange={(e) => setDescricao(e.target.value)}></textarea> \r\n          <p>{descricao.length}/500</p>\r\n        </div>\r\n\r\n        <div className='card-editar-lancamento-upload'>\r\n          {imagemSelecionada && (\r\n                <>\r\n                <label htmlFor='upload-img'>\r\n                  <p className='titulo-lancamento-upload'>Comprovativo *</p>\r\n                  <img src={imagemPreview} />\r\n                </label>\r\n                <input id='upload-img' \r\n                       type=\"file\" \r\n                       name='comprovativo' \r\n                       accept=\"image/*\"\r\n                       onChange={(e) => setImagemSelecionada(e.target.files[0])}/>\r\n              </>\r\n          )}\r\n          {comprovativoCard !== \"\" && imagemSelecionada === undefined && (\r\n              <>\r\n                <label htmlFor='upload-img'>\r\n                  <p className='titulo-lancamento-upload'>Comprovativo *</p>\r\n                  <img src={`data:image/jpeg;base64,${comprovativoCard.data}`} />\r\n                </label>\r\n                <input id='upload-img' \r\n                       type=\"file\" \r\n                       name='comprovativo'\r\n                       accept=\"image/*\"\r\n                       onChange={(e) => setImagemSelecionada(e.target.files[0])}/>\r\n              </>\r\n          )}\r\n          {comprovativoCard === \"\" && !imagemSelecionada&&\r\n          (\r\n            <>\r\n              <label htmlFor='upload-img'>\r\n                <p className='titulo-lancamento-upload'>Comprovativo *</p>\r\n                <i className=\"fa-solid fa-cloud-arrow-up\"></i>\r\n                <p className='nome-arquivo-lancamento-upload'>{comprovativo}</p>\r\n              </label>\r\n              <input id='upload-img' \r\n                    type=\"file\"\r\n                    name='comprovativo' \r\n                    accept=\"image/*\"\r\n                    value={comprovativo}\r\n                    onChange={(e) => setImagemSelecionada(e.target.files[0])}/>\r\n            </>\r\n          )\r\n            }\r\n        </div>\r\n        <p className='card-editar-lancamento-upload-msg'>Apenas arquivos menores que 5Mb no formato PNG ou JPEG</p>\r\n\r\n        <input type=\"submit\" value=\"ADICIONAR\"/>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default CardEditarLancamento","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_lancamento\\CardLancamento.js",["99","100"],[],"import React, { useContext, useEffect, useState } from 'react';\r\n\r\nimport \"./CardLancamento.css\";\r\n\r\nfunction CardLancamento({ valor = \"0\", \r\n                          status = \"EM RASCUNHO\", \r\n                          data, \r\n                          titulo = \"-\", \r\n                          descricao = \"-\", \r\n                          categoria = \"Categoria\", \r\n                          comprovativo, \r\n                          aoAbrirEdicao }) {\r\n\r\n  const [isImagemOpen, setIsImagemOpen] = useState(false);\r\n  const [progressoBar, setProgressoBar] = useState(0);\r\n\r\n  const handleImgPreviewClick = () => {\r\n    if (comprovativo !== undefined) {\r\n        setIsImagemOpen(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (status === \"EM_RASCUNHO\") setProgressoBar(0);\r\n    if (status === \"ENVIADO\") setProgressoBar(20);\r\n    if (status === \"ANALISE\") setProgressoBar(50);\r\n    if (status === \"CREDITADO\") setProgressoBar(100);\r\n    if (status === \"NEGADO\") setProgressoBar(100);\r\n  }, [status])\r\n\r\n  valor /= 100;\r\n  return (\r\n    <div className='card-lancamento'>\r\n      {isImagemOpen && (\r\n        <>\r\n          <div className='card-lancamento-preview-bg' onClick={() => setIsImagemOpen(false)}></div>\r\n          <div className='card-lancamento-preview-img-container'>\r\n          <img src={`data:image/jpeg;base64,${comprovativo}`} />\r\n            <i className=\"fa-solid fa-xmark card-lancamento-preview-img-button\" onClick={() => setIsImagemOpen(false)}></i>\r\n          </div>\r\n        </>\r\n      )}\r\n      <div className='card-lancamento-top-container'>\r\n        <div className='card-lancamento-textos-container'>\r\n          <h4 className='card-lancamento-texto-titulo' style={{color: titulo === \"-\" && \"red\"}}>\r\n            {titulo.length > 24 ? titulo.substring(0, 24) + \"...\" : titulo}\r\n          </h4>\r\n          <p className='card-lancamento-texto-descricao'>{descricao.length > 110 ? descricao.substring(0, 110) + \"...\" : descricao}</p>\r\n          <p className='card-lancamento-texto-categoria' style={{backgroundColor: categoria === \"Categoria\" && \"#FF4747\"}} >{categoria.replace(\"_\", \" \")}</p>\r\n        </div>\r\n        <div className='card-lancamento-icones-container'>\r\n          <i className=\"fa-solid fa-pen\" onClick={aoAbrirEdicao}></i>\r\n          <i className=\"fa-regular fa-image\" style={{color: comprovativo === undefined && \"#FF4747\"}} onClick={() => handleImgPreviewClick()}></i>\r\n        </div>\r\n      </div>\r\n      <div className='card-lancamento-bottom-container'>\r\n        <div className='card-lancamento-bottom-status-container'>\r\n          <div className='card-lancamento-bottom-status-bar'>\r\n            <div className='card-lancamento-bottom-status-bar-full' style={{width: progressoBar + \"%\"}}></div>\r\n            <div className='card-lancamento-bottom-status-bar-current' style={{backgroundColor: progressoBar === 0 && \"#f2b422\"}}></div>\r\n            <p>%</p>\r\n          </div>\r\n          <p className='card-lancamento-bottom-status-text'>{status.replace(\"_\", \" \")}</p>\r\n        </div>\r\n        <div className='card-lancamento-bottom-text-container'>\r\n          <p className='card-lancamento-bottom-text-date'><span>JAV</span> 2023</p>\r\n          {(status === \"EM_RASCUNHO\" || valor === 0 || titulo === \"-\" || categoria === \"Categoria\" || comprovativo === undefined) && <i className=\"fa-solid fa-triangle-exclamation\" style={{color: progressoBar === 0 && \"#f2b422\"}}></i>}\r\n          <h5 style={{color: valor === 0 && \"#FF4747\"}}>R${valor}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardLancamento","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\pages\\tela_inicial\\TelaInicial.js",["101"],[],"import React, { useEffect, useState } from 'react';\r\nimport CardLancamento from '../../components/card_lancamento/CardLancamento';\r\nimport CardTelaInicial from '../../components/card_tela_inicial/CardTelaInicial';\r\nimport Header from '../../components/header/Header';\r\nimport ModalFiltro from '../../components/card_filtro/CardFiltro';\r\nimport { Lancamentos, Usuarios } from '../../data/data';\r\n\r\nimport \"./TelaInicial.css\";\r\nimport CardEditarLancamento from '../../components/card_cadastro_lancamento/CardEditarLancamento';\r\n\r\nfunction TelaInicial() {\r\n  const [lancamentos, setLancamentos] = useState(Lancamentos);\r\n\r\n  const [filtrosPorStatus, setFiltrosPorStatus] = useState([]);\r\n  const [filtrosPorCategoria, setFiltrosPorCategoria] = useState([]);\r\n  const [filtroPorPrecoMin, setFiltroPorPrecoMin] = useState(\"\");\r\n  const [filtroPorPrecoMax, setFiltroPorPrecoMax] = useState(\"\");\r\n  const [quantidadeFiltros, setQuantidadeFiltros] = useState(0);\r\n\r\n  const [isFiltroModalAberto, setIsFiltroModalAberto] = useState(false);\r\n  const [isEditarModalAberto, setIsEditarModalAberto] = useState(false);\r\n  const [isAdicionarModalAberto, setIsAdicionarModalAberto] = useState(false);\r\n\r\n  const [currentModalData, setCurrentModalData] = useState(lancamentos[0]);\r\n\r\n  const lancamentosOriginal = Lancamentos;\r\n\r\n  useEffect(() => {\r\n    if (isFiltroModalAberto || isAdicionarModalAberto || isEditarModalAberto) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n  }, [isFiltroModalAberto, isEditarModalAberto, isAdicionarModalAberto]);\r\n\r\n  useEffect(() => {\r\n    setLancamentos(lancamentosOriginal);\r\n    setQuantidadeFiltros(0);\r\n\r\n    if (filtroPorPrecoMin !== \"\") {\r\n      setLancamentos(lancamentos.filter(x => Number(x.valor) >= filtroPorPrecoMin));\r\n      setQuantidadeFiltros(quantidadeFiltros + 1);\r\n    }\r\n    if (filtroPorPrecoMax !== \"\") {\r\n      setLancamentos(lancamentos.filter(x => Number(x.valor) <= filtroPorPrecoMax));\r\n      setQuantidadeFiltros(quantidadeFiltros + 1);\r\n    }\r\n    if (filtrosPorStatus.length !== 0) {\r\n      setLancamentos(lancamentos.filter(x => filtrosPorStatus.includes(x.status.toLowerCase())));\r\n    }\r\n    if (filtrosPorCategoria.length !== 0) {\r\n      setLancamentos(lancamentos.filter(x => filtrosPorCategoria.includes(x.categoria.toLowerCase())));\r\n    }\r\n\r\n    setQuantidadeFiltros(quantidadeFiltros + filtrosPorStatus.length + filtrosPorCategoria.length);\r\n\r\n  }, [filtrosPorStatus, filtrosPorCategoria, filtroPorPrecoMin, filtroPorPrecoMax]);\r\n\r\n  const buscarLancamentoPorTitulo = (titulo) => {\r\n    setLancamentos(lancamentosOriginal.filter(x => x.titulo.toLowerCase().includes(titulo.toLowerCase())));\r\n  }\r\n\r\n  const handleAbrirEdicaoLancamento = (lancamento) => {\r\n    setCurrentModalData(lancamento);\r\n    setIsEditarModalAberto(true);\r\n  }\r\n\r\n  const handleSomarValores = () => {\r\n    var atual = lancamentos.reduce((total, x) => total + Number(x.valor), 0) / 100;\r\n    return atual.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});\r\n  }\r\n\r\n  const handleDataUltimo = () => {\r\n    let x = lancamentos;\r\n    if (x.length === 0) return \"-\";\r\n\r\n    x = x.sort((a,b) => {\r\n      let aSplit = a.data.split(\"-\");\r\n      let bSplit = b.data.split(\"-\");\r\n      \r\n      let aDate = new Date(aSplit[2], aSplit[1], aSplit[0]);\r\n      let bDate = new Date(bSplit[2], bSplit[1], bSplit[0]);\r\n      return bDate.getTime() - aDate.getTime();\r\n    });\r\n\r\n    return x[0].data.substring(8, 10) + \"/\" + x[0].data.substring(5, 7);\r\n  }\r\n\r\n  const handleCreditados = () => {\r\n    return lancamentos.filter(x => x.status === \"CREDITADO\").length;\r\n  }\r\n\r\n  return (\r\n    <section className='container-tela-inicial'>\r\n        <Header usuario={Usuarios[0]}/> \r\n\r\n        <div className='tela-inicial-cards-container'>\r\n          <CardTelaInicial titulo=\"$ Total\" dado={handleSomarValores()} img_url=\"/img/card-tela-inicial/card_total.png\" />\r\n          <CardTelaInicial titulo=\"Lancamento\" dado={lancamentos.length} img_url=\"/img/card-tela-inicial/card_qnt_lancamentos.png\" />\r\n          <CardTelaInicial titulo=\"Data Último\" dado={handleDataUltimo()} img_url=\"/img/card-tela-inicial/card_data.png\" />\r\n          <CardTelaInicial titulo=\"Creditados\" dado={handleCreditados()} img_url=\"/img/card-tela-inicial/card_creditados.png\" />\r\n        </div>\r\n\r\n        <div className='tela-inicial-lancamentos-container'>\r\n\r\n          <div className='lancamentos-container-header'>\r\n            <span className='linha'></span>\r\n            <p>SEUS LANÇAMENTOS</p>\r\n            <span className='linha'></span>\r\n          </div>\r\n\r\n          \r\n          <div className='lancamentos-content'>\r\n            <div className='lancamentos-content-header'>\r\n              <button className='lancamento-adicionar-btn' onClick={() => setIsAdicionarModalAberto(true)}>ADICIONAR LANÇAMENTO</button>\r\n\r\n              <div className='lancamento-content-header-search-container'>\r\n                <div className='input-container'>\r\n                  <i className=\"fa-solid fa-magnifying-glass\"></i>\r\n                  <input type=\"text\"\r\n                         placeholder='Pesquise pelo título de um lançamento' \r\n                         onChange={(e) => buscarLancamentoPorTitulo(e.target.value)}/>\r\n                </div>\r\n\r\n                <div className='filter-container' onClick={() => setIsFiltroModalAberto(!isFiltroModalAberto)}>\r\n                  <i className=\"fa-solid fa-filter\"></i>\r\n                  {quantidadeFiltros !== 0 && <p>{quantidadeFiltros}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {(!isEditarModalAberto && !isAdicionarModalAberto && !isFiltroModalAberto) && <div className=\"lancamentos-container\">\r\n              {lancamentos.map((x, i) => (\r\n                <CardLancamento key={i} \r\n                                valor={x.valor} \r\n                                status={x.status} \r\n                                titulo={x.titulo} \r\n                                descricao={x.descricao} \r\n                                categoria={x.categoria} \r\n                                comprovativo={x.img.data}\r\n                                aoAbrirEdicao={() => handleAbrirEdicaoLancamento(x)}/>\r\n              ))}\r\n            </div>}\r\n\r\n\r\n            {lancamentos.length === 0 &&\r\n              <div className='lancamento-content-nenhum-container'>\r\n                <p>Nenhum lançamento encontrado!</p>\r\n                <i className=\"fa-regular fa-face-frown\"></i>\r\n              </div>}\r\n          </div>\r\n        </div>\r\n\r\n        {isFiltroModalAberto && <ModalFiltro onCloseClick={() => setIsFiltroModalAberto(false)}\r\n                                             enviarFiltrosPorStatus={(x) => setFiltrosPorStatus(x)}\r\n                                             enviarFiltrosPorCategoria={(x) => setFiltrosPorCategoria(x)}\r\n                                             enviarFiltrosPorPrecoMin={(x) => setFiltroPorPrecoMin(x)}\r\n                                             enviarFiltrosPorPrecoMax={(x) => setFiltroPorPrecoMax(x)}\r\n                                             filtrosPorStatusSelecionaods={filtrosPorStatus}\r\n                                             filtrosPorCategoriaSelecionaods={filtrosPorCategoria}\r\n                                             filtroPrecoMinSelecionado={filtroPorPrecoMin}\r\n                                             filtroPrecoMaxSelecionado={filtroPorPrecoMax} />}\r\n\r\n        {isAdicionarModalAberto && <CardEditarLancamento onCloseClick={() => setIsAdicionarModalAberto(false)}\r\n                                                      tituloCard=\"Adicionar Lançamento\"/>}\r\n\r\n        {isEditarModalAberto && <CardEditarLancamento onCloseClick={() => setIsEditarModalAberto(false)}\r\n                                               tituloCard=\"Editar Lançamento\"\r\n                                               tituloLanc={currentModalData.titulo}\r\n                                               valorCard={currentModalData.valor}\r\n                                               categoriaCard={currentModalData.categoria}\r\n                                               descricaoCard={currentModalData.descricao}\r\n                                               comprovativoCard={currentModalData.img}/>}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TelaInicial","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\data\\data.js",[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\Context.js",[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\pages\\tela_login_cadastro\\LoginCadastro.js",[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\pages\\tela_adm\\TelaAdm.js",[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_tela_inicial\\CardTelaInicial.js",["102"],[],"import React from 'react';\r\n\r\nimport \"./CardTelaInicial.css\";\r\n\r\nfunction CardTelaInicial({ titulo, img_url, dado }) {\r\n  return (\r\n    <div className='card-tela-inicial'>\r\n      <img src={img_url}/>\r\n      <div className='card-tela-inicial-conteudo'>\r\n        <p>{titulo}</p>\r\n        <h2>{dado}</h2>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardTelaInicial","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\card_filtro\\CardFiltro.js",["103","104"],[],"import React, { useState } from 'react';\r\n\r\nimport \"./CardFiltro.css\";\r\n\r\nconst filtros_status = [\r\n  {\"nome\": \"Em rascunho\", \"valor\": \"em_rascunho\"},\r\n  {\"nome\": \"Enviado\", \"valor\": \"enviado\"},\r\n  {\"nome\": \"Aguardando reembolso\", \"valor\": \"aguardando_reembolso\"},\r\n  {\"nome\": \"Creditado\", \"valor\": \"creditado\"},\r\n];\r\n\r\nconst filtros_categorias = [\r\n  {\"nome\": \"Alimentação\", \"valor\": \"alimentacao\"},\r\n  {\"nome\": \"Transporte/Gasolina\", \"valor\": \"transporte_gasolina\"},\r\n  {\"nome\": \"Hospedagem\", \"valor\": \"hospedagem\"},\r\n  {\"nome\": \"software\", \"valor\": \"software\"},\r\n  {\"nome\": \"treinamento\", \"valor\": \"treinamento\"},\r\n  {\"nome\": \"outro\", \"valor\": \"outro\"},\r\n];\r\n\r\nfunction CardFiltro({ onCloseClick, \r\n                      enviarFiltrosPorStatus, \r\n                      enviarFiltrosPorCategoria,\r\n                      enviarFiltrosPorPrecoMin,\r\n                      enviarFiltrosPorPrecoMax,\r\n                      filtrosPorStatusSelecionaods, \r\n                      filtrosPorCategoriaSelecionaods,\r\n                      filtroPrecoMinSelecionado,\r\n                      filtroPrecoMaxSelecionado }) {\r\n  const [statusSelecionados, setStatusSelecionados] = useState(filtrosPorStatusSelecionaods);\r\n  const [categoriasSelecionados, setCategoriasSelecionados] = useState(filtrosPorCategoriaSelecionaods);\r\n  const [precoMinSelecionado, setPrecoMinSelecionado] = useState(filtroPrecoMinSelecionado);\r\n  const [precoMaxSelecionado, setPrecoMaxSelecionado] = useState(filtroPrecoMaxSelecionado);\r\n\r\n  const handleSelecionarStatus = (i) => {\r\n    if (statusSelecionados.includes(filtros_status[i].valor)) {\r\n      setStatusSelecionados(statusSelecionados.filter(x => x != filtros_status[i].valor));\r\n    } else {\r\n      setStatusSelecionados([...statusSelecionados, filtros_status[i].valor]);\r\n    }\r\n  }\r\n\r\n  const handleSelecionarCategorias = (i) => {\r\n    if (categoriasSelecionados.includes(filtros_categorias[i].valor)) {\r\n      setCategoriasSelecionados(categoriasSelecionados.filter(x => x != filtros_categorias[i].valor));\r\n    } else {\r\n      setCategoriasSelecionados([...categoriasSelecionados, filtros_categorias[i].valor]);\r\n    }\r\n  }\r\n\r\n  const handleClicarFiltrar = () => {\r\n    enviarFiltrosPorStatus(statusSelecionados);\r\n    enviarFiltrosPorCategoria(categoriasSelecionados);\r\n    enviarFiltrosPorPrecoMin(precoMinSelecionado);\r\n    enviarFiltrosPorPrecoMax(precoMaxSelecionado);\r\n    onCloseClick();\r\n  }\r\n\r\n  return (\r\n    <div className='card-filtro-container'>\r\n      <div className='card-filtro-dark-bg'></div>\r\n      <div className='card-filtro-content'>\r\n        <i className=\"fa-solid fa-xmark\" onClick={onCloseClick}></i>\r\n        <div className='card-filtro-header'>\r\n          <h2>Filtros</h2>\r\n          <p>Insira os filtros desejados</p>\r\n        </div>\r\n        <form onSubmit={(event) => event.preventDefault()}>\r\n\r\n          <h3>Status</h3>\r\n          <div className='card-filtro-form-container'>\r\n            {filtros_status.map((x, i) => (\r\n              <div key={i} className={`card-filtrocheckbox-item-container ${statusSelecionados.includes(filtros_status[i].valor) && \"card-filtrocheckbox-item-active\"}`}>\r\n                <i className={`fa-solid fa-check ${statusSelecionados.includes(filtros_status[i].valor) && \"card-filtrocheckbox-item-icon-show\"}`}></i>\r\n                <p onClick={() => handleSelecionarStatus(i)}>{x.nome}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <h3>Preço</h3>\r\n          <div className='card-filtro-form-price-container'>\r\n            <input type=\"number\" placeholder='Preço Min.' value={precoMinSelecionado} onChange={(e) => setPrecoMinSelecionado(e.target.value)}/>\r\n            <input type=\"number\" placeholder='Preço Max.' value={precoMaxSelecionado} onChange={(e) => setPrecoMaxSelecionado(e.target.value)}/>\r\n          </div>\r\n\r\n          <h3>Categoria</h3>\r\n          <div className='card-filtro-form-container'>\r\n            {filtros_categorias.map((x, i) => (\r\n              <div key={i} className={`card-filtrocheckbox-item-container ${categoriasSelecionados.includes(filtros_categorias[i].valor) && \"card-filtrocheckbox-item-active\"}`}>\r\n                <i className={`fa-solid fa-check ${categoriasSelecionados.includes(filtros_categorias[i].valor) && \"card-filtrocheckbox-item-icon-show\"}`}></i>\r\n                <p onClick={() => handleSelecionarCategorias(i)}>{x.nome}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <input type=\"submit\" value=\"FILTRAR\" onClick={() => handleClicarFiltrar()}/>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardFiltro","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\header\\Header.js",["105","106"],[],"import React, { useState } from 'react';\r\nimport { Notificacoes } from '../../data/data';\r\nimport Notificacao from '../notificacao/Notificacao';\r\n\r\nimport \"./Header.css\";\r\n\r\nfunction Header({ usuario }) {\r\n  const [notificacoes, setNotificacoes] = useState([]);\r\n  const [isNotificacaoAberta, setIsNotificacaoAberta] = useState(false);\r\n\r\n  return (\r\n    <div className='header'>\r\n      <img className='header-textura' src='/img/header_texture.png' alt='textura'/>\r\n      <div className='header-container'>\r\n        <div className='header-user-container'>\r\n          <i className=\"fa-solid fa-user\"></i>\r\n          <div className='header-user-container-content'>\r\n            <p>Olá,</p>\r\n            <p className='header-content-username'>{usuario.nome}</p>\r\n          </div>\r\n        </div>\r\n        <i className=\"fa-regular fa-bell\" onClick={() => setIsNotificacaoAberta(!isNotificacaoAberta)}></i>\r\n      </div>\r\n      {isNotificacaoAberta && <Notificacao conteudo={Notificacoes}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\formulario_login\\FormLogin.js",["107"],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\cartao_confirmacao_cadastro\\CardConfirmacaoCadastro.js",[],[],"C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\notificacao\\Notificacao.js",["108","109"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Notificacoes } from '../../data/data';\r\nimport ItemNotificacao from './item_notificacao/ItemNotificacao';\r\n\r\nimport \"./Notificacao.css\";\r\n\r\nfunction Notificacao({ conteudo }) {\r\n  const [notificacaoAberta, setNotificacaoAberta] = useState(-1);\r\n  const [notificacoes, setNotificacoes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setNotificacoes(conteudo);\r\n  }, []);\r\n\r\n  const handleNotificacaoClick = (i) => {\r\n    setNotificacaoAberta(notificacaoAberta === i ? -1 : i);\r\n    notificacoes[i].visto = true;\r\n  }\r\n\r\n  return (\r\n    <div className='notificacoes-container'>\r\n        <h4>Notificações</h4>\r\n        <div className='notificacoes-content'>\r\n            {/* {conteudo.length == 0 && <p className='nenhuma-notificacao-aviso'>Nenhuma notificação</p>} */}\r\n            <div className='itens-notificacao-container'>\r\n              {notificacoes.map((x, i) => (\r\n                <ItemNotificacao onBtnClick={() => handleNotificacaoClick(i)}\r\n                                 key={i} \r\n                                 titulo={x.titulo} \r\n                                 descricao={x.msg} \r\n                                 data={x.data} \r\n                                 visto={x.visto} \r\n                                 aberto={i === notificacaoAberta}/>\r\n              ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notificacao","C:\\Users\\silva\\Desktop\\projeto\\cliente\\src\\components\\notificacao\\item_notificacao\\ItemNotificacao.js",["110"],[],"import React, { useState } from 'react';\r\n\r\nimport \"./ItemNotificacao.css\";\r\n\r\nfunction ItemNotificacao({ titulo, descricao, data, visto, aberto, onBtnClick}) {\r\n  return (\r\n    <div className='item-notificacao-container' onClick={() => onBtnClick()}>\r\n        <i className=\"fa-solid fa-file-invoice-dollar\"></i>\r\n        <div className='item-notificacao-content'>\r\n            <h5>{titulo}</h5>\r\n            <p className={`item-notificacao-descricao ${aberto && \"item-notificacao-aberto\"}`}>\r\n              {descricao.length > 80 ? aberto ? descricao : descricao.substr(0, 80) + \"...\" : descricao}\r\n            </p>\r\n            <div className='item-notificacao-footer'>\r\n                {!visto && <span></span>}\r\n                <p>2 horas atrás</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemNotificacao",{"ruleId":"111","severity":1,"message":"112","line":16,"column":24,"nodeType":"113","messageId":"114","endLine":16,"endColumn":39},{"ruleId":"115","severity":1,"message":"116","line":72,"column":19,"nodeType":"117","endLine":72,"endColumn":46},{"ruleId":"115","severity":1,"message":"116","line":85,"column":19,"nodeType":"117","endLine":85,"endColumn":82},{"ruleId":"111","severity":1,"message":"118","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":38,"column":11,"nodeType":"117","endLine":38,"endColumn":65},{"ruleId":"119","severity":1,"message":"120","line":57,"column":6,"nodeType":"121","endLine":57,"endColumn":83,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"116","line":8,"column":7,"nodeType":"117","endLine":8,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":37,"column":62,"nodeType":"125","messageId":"126","endLine":37,"endColumn":64},{"ruleId":"123","severity":1,"message":"124","line":45,"column":70,"nodeType":"125","messageId":"126","endLine":45,"endColumn":72},{"ruleId":"111","severity":1,"message":"127","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":22},{"ruleId":"111","severity":1,"message":"128","line":8,"column":24,"nodeType":"113","messageId":"114","endLine":8,"endColumn":39},{"ruleId":"111","severity":1,"message":"129","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":17},{"ruleId":"111","severity":1,"message":"130","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":22},{"ruleId":"119","severity":1,"message":"131","line":13,"column":6,"nodeType":"121","endLine":13,"endColumn":8,"suggestions":"132"},{"ruleId":"111","severity":1,"message":"133","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},"no-unused-vars","'setComprovativo' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lancamentos', 'lancamentosOriginal', and 'quantidadeFiltros'. Either include them or remove the dependency array. You can also do a functional update 'setQuantidadeFiltros(q => ...)' if you only need 'quantidadeFiltros' in the 'setQuantidadeFiltros' call.","ArrayExpression",["134"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'notificacoes' is assigned a value but never used.","'setNotificacoes' is assigned a value but never used.","'context' is assigned a value but never used.","'Notificacoes' is defined but never used.","React Hook useEffect has a missing dependency: 'conteudo'. Either include it or remove the dependency array. If 'setNotificacoes' needs the current value of 'conteudo', you can also switch to useReducer instead of useState and read 'conteudo' in the reducer.",["135"],"'useState' is defined but never used.",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [filtrosPorStatus, filtrosPorCategoria, filtroPorPrecoMin, filtroPorPrecoMax, lancamentosOriginal, quantidadeFiltros, lancamentos]",{"range":"140","text":"141"},"Update the dependencies array to be: [conteudo]",{"range":"142","text":"143"},[2482,2559],"[filtrosPorStatus, filtrosPorCategoria, filtroPorPrecoMin, filtroPorPrecoMax, lancamentosOriginal, quantidadeFiltros, lancamentos]",[424,426],"[conteudo]"]